// Display study results in unique card-based layout
function displayStudyResults(studyData) {
    const sections = [
        {
            title: '📚 Core Concepts & Fundamentals',
            content: studyData.ultra_long_notes,
            type: 'long-text',
            icon: '📚'
        },
        {
            title: '🎯 Key Concepts Breakdown',
            content: studyData.key_concepts,
            type: 'bubble-list',
            icon: '🎯'
        },
        {
            title: '💡 Smart Techniques & Tricks',
            content: studyData.key_tricks,
            type: 'card-list',
            icon: '💡'
        },
        {
            title: '❓ Practice Questions & Solutions',
            content: studyData.practice_questions,
            type: 'qa-grid',
            icon: '❓'
        },
        {
            title: '🚀 Advanced Strategies',
            content: studyData.advanced_tricks,
            type: 'highlight-list',
            icon: '🚀'
        },
        {
            title: '📝 Quick Revision Notes',
            content: studyData.short_notes,
            type: 'compact-text',
            icon: '📝'
        },
        {
            title: '🧠 Advanced Challenge Questions',
            content: studyData.advanced_questions,
            type: 'qa-advanced',
            icon: '🧠'
        },
        {
            title: '🌍 Real-World Applications',
            content: studyData.real_world_applications,
            type: 'application-cards',
            icon: '🌍'
        },
        {
            title: '⚠️ Common Pitfalls & Misconceptions',
            content: studyData.common_misconceptions,
            type: 'warning-list',
            icon: '⚠️'
        },
        {
            title: '📊 Exam Success Tips',
            content: studyData.exam_tips,
            type: 'tip-cards',
            icon: '📊'
        },
        {
            title: '🔗 Recommended Resources',
            content: studyData.recommended_resources,
            type: 'resource-links',
            icon: '🔗'
        }
    ];

    let html = `
        <div class="study-dashboard">
            <div class="dashboard-header">
                <div class="topic-main">
                    <h2>${studyData.topic}</h2>
                    <div class="topic-meta">
                        <span class="curriculum-badge">${studyData.curriculum_alignment}</span>
                        <span class="score-display">Mastery Score: ${studyData.study_score}/100</span>
                    </div>
                </div>
                <div class="progress-summary">
                    <div class="progress-circle">
                        <svg width="80" height="80" viewBox="0 0 80 80">
                            <circle cx="40" cy="40" r="35" stroke="#333" stroke-width="3" fill="none"></circle>
                            <circle cx="40" cy="40" r="35" stroke="#ffd700" stroke-width="3" fill="none" 
                                    stroke-dasharray="${2 * Math.PI * 35}" 
                                    stroke-dashoffset="${2 * Math.PI * 35 * (1 - studyData.study_score/100)}"
                                    transform="rotate(-90 40 40)"></circle>
                        </svg>
                        <span>${studyData.study_score}%</span>
                    </div>
                </div>
            </div>

            <div class="dashboard-grid">
    `;

    sections.forEach((section, index) => {
        if (section.content && (!Array.isArray(section.content) || section.content.length > 0)) {
            html += `
                <div class="study-card" data-card-type="${section.type}">
                    <div class="card-header">
                        <span class="card-icon">${section.icon}</span>
                        <h3>${section.title}</h3>
                        <button class="card-toggle">+</button>
                    </div>
                    <div class="card-content">
                        ${formatSectionContent(section.content, section.type)}
                    </div>
                </div>
            `;
        }
    });

    html += `
            </div>
            
            <div class="study-footer">
                <div class="completion-badge">
                    <span class="badge-icon">🏆</span>
                    <div class="badge-content">
                        <strong>Study Package Complete</strong>
                        <span>Generated by ${studyData.powered_by}</span>
                        <small>${new Date(studyData.generated_at).toLocaleString()}</small>
                    </div>
                </div>
            </div>
        </div>
    `;

    resultsContainer.innerHTML = html;
    
    // Add card toggle functionality
    document.querySelectorAll('.card-toggle').forEach(toggle => {
        toggle.addEventListener('click', function() {
            const card = this.closest('.study-card');
            const content = card.querySelector('.card-content');
            const isExpanded = content.style.display !== 'none';
            
            content.style.display = isExpanded ? 'none' : 'block';
            this.textContent = isExpanded ? '+' : '−';
            card.classList.toggle('collapsed', isExpanded);
        });
    });

    // Expand all button functionality
    document.getElementById('expandAllBtn').addEventListener('click', function() {
        document.querySelectorAll('.study-card').forEach(card => {
            const content = card.querySelector('.card-content');
            const toggle = card.querySelector('.card-toggle');
            content.style.display = 'block';
            toggle.textContent = '−';
            card.classList.remove('collapsed');
        });
    });

    // Scroll to results on mobile
    if (window.innerWidth <= 768) {
        setTimeout(() => {
            resultsSection.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }, 300);
    }
}

// Updated formatSectionContent function
function formatSectionContent(content, type) {
    if (!content) return '<p class="no-content">Content not available</p>';
    
    switch (type) {
        case 'bubble-list':
            if (Array.isArray(content)) {
                return `<div class="bubble-container">${content.map(item => 
                    `<div class="concept-bubble">${item}</div>`
                ).join('')}</div>`;
            }
            return `<p>${content}</p>`;
            
        case 'card-list':
            if (Array.isArray(content)) {
                return `<div class="technique-grid">${content.map(item => 
                    `<div class="technique-card">
                        <div class="card-bullet">✦</div>
                        <div class="card-text">${item}</div>
                    </div>`
                ).join('')}</div>`;
            }
            return `<p>${content}</p>`;
            
        case 'qa-grid':
            if (Array.isArray(content)) {
                return `<div class="qa-grid">${content.map(qa => 
                    `<div class="qa-card">
                        <div class="question-box">
                            <strong>${qa.question}</strong>
                        </div>
                        <div class="answer-box">
                            ${qa.answer}
                        </div>
                    </div>`
                ).join('')}</div>`;
            }
            return `<p>${content}</p>`;
            
        case 'highlight-list':
            if (Array.isArray(content)) {
                return `<div class="highlight-list">${content.map(item => 
                    `<div class="highlight-item">
                        <span class="highlight-bullet">🚀</span>
                        <span>${item}</span>
                    </div>`
                ).join('')}</div>`;
            }
            return `<p>${content}</p>`;
            
        case 'application-cards':
            if (Array.isArray(content)) {
                return `<div class="application-grid">${content.map(item => 
                    `<div class="application-card">
                        <div class="app-icon">🌍</div>
                        <div class="app-content">${item}</div>
                    </div>`
                ).join('')}</div>`;
            }
            return `<p>${content}</p>`;
            
        case 'warning-list':
            if (Array.isArray(content)) {
                return `<div class="warning-container">${content.map(item => 
                    `<div class="warning-item">
                        <span class="warning-icon">⚠️</span>
                        <span>${item}</span>
                    </div>`
                ).join('')}</div>`;
            }
            return `<p>${content}</p>`;
            
        case 'tip-cards':
            if (Array.isArray(content)) {
                return `<div class="tips-grid">${content.map((tip, i) => 
                    `<div class="tip-card">
                        <div class="tip-number">${i + 1}</div>
                        <div class="tip-content">${tip}</div>
                    </div>`
                ).join('')}</div>`;
            }
            return `<p>${content}</p>`;
            
        case 'resource-links':
            if (Array.isArray(content)) {
                return `<div class="resources-list">${content.map(item => 
                    `<div class="resource-item">
                        <span class="resource-bullet">📚</span>
                        <span>${item}</span>
                    </div>`
                ).join('')}</div>`;
            }
            return `<p>${content}</p>`;
            
        case 'long-text':
            return `<div class="content-scrollable"><div class="formatted-content">${content.replace(/\n/g, '</p><p>')}</div></div>`;
            
        case 'compact-text':
            return `<div class="compact-notes">${content}</div>`;
            
        case 'qa-advanced':
            if (Array.isArray(content)) {
                return content.map(qa => 
                    `<div class="advanced-qa">
                        <div class="advanced-question">
                            <span class="q-marker">🧠</span>
                            <strong>${qa.question}</strong>
                        </div>
                        <div class="advanced-answer">
                            ${qa.answer}
                        </div>
                    </div>`
                ).join('');
            }
            return `<p>${content}</p>`;
            
        default:
            return `<p>${content}</p>`;
    }
}